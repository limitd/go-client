// Code generated by protoc-gen-go.
// source: protocol/messages/Response.proto
// DO NOT EDIT!

package limitd

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type Response_Type int32

const (
	Response_ERROR Response_Type = 1
	Response_TAKE  Response_Type = 2
	Response_PUT   Response_Type = 3
)

var Response_Type_name = map[int32]string{
	1: "ERROR",
	2: "TAKE",
	3: "PUT",
}
var Response_Type_value = map[string]int32{
	"ERROR": 1,
	"TAKE":  2,
	"PUT":   3,
}

func (x Response_Type) Enum() *Response_Type {
	p := new(Response_Type)
	*p = x
	return p
}
func (x Response_Type) String() string {
	return proto.EnumName(Response_Type_name, int32(x))
}
func (x *Response_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Response_Type_value, data, "Response_Type")
	if err != nil {
		return err
	}
	*x = Response_Type(value)
	return nil
}

type ErrorResponse_Type int32

const (
	ErrorResponse_UNKNOWN_BUCKET_TYPE ErrorResponse_Type = 1
)

var ErrorResponse_Type_name = map[int32]string{
	1: "UNKNOWN_BUCKET_TYPE",
}
var ErrorResponse_Type_value = map[string]int32{
	"UNKNOWN_BUCKET_TYPE": 1,
}

func (x ErrorResponse_Type) Enum() *ErrorResponse_Type {
	p := new(ErrorResponse_Type)
	*p = x
	return p
}
func (x ErrorResponse_Type) String() string {
	return proto.EnumName(ErrorResponse_Type_name, int32(x))
}
func (x *ErrorResponse_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ErrorResponse_Type_value, data, "ErrorResponse_Type")
	if err != nil {
		return err
	}
	*x = ErrorResponse_Type(value)
	return nil
}

type Response struct {
	RequestId        *string                   `protobuf:"bytes,1,req,name=request_id" json:"request_id,omitempty"`
	Type             *Response_Type            `protobuf:"varint,2,req,name=type,enum=limitd.Response_Type" json:"type,omitempty"`
	XXX_extensions   map[int32]proto.Extension `json:"-"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}

var extRange_Response = []proto.ExtensionRange{
	{100, 536870911},
}

func (*Response) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_Response
}
func (m *Response) ExtensionMap() map[int32]proto.Extension {
	if m.XXX_extensions == nil {
		m.XXX_extensions = make(map[int32]proto.Extension)
	}
	return m.XXX_extensions
}

func (m *Response) GetRequestId() string {
	if m != nil && m.RequestId != nil {
		return *m.RequestId
	}
	return ""
}

func (m *Response) GetType() Response_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Response_ERROR
}

type ErrorResponse struct {
	Type             *ErrorResponse_Type `protobuf:"varint,1,req,name=type,enum=limitd.ErrorResponse_Type" json:"type,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *ErrorResponse) Reset()         { *m = ErrorResponse{} }
func (m *ErrorResponse) String() string { return proto.CompactTextString(m) }
func (*ErrorResponse) ProtoMessage()    {}

func (m *ErrorResponse) GetType() ErrorResponse_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ErrorResponse_UNKNOWN_BUCKET_TYPE
}

var E_ErrorResponse_Response = &proto.ExtensionDesc{
	ExtendedType:  (*Response)(nil),
	ExtensionType: (*ErrorResponse)(nil),
	Field:         100,
	Name:          "limitd.ErrorResponse.response",
	Tag:           "bytes,100,opt,name=response",
}

type TakeResponse struct {
	Conformant       *bool  `protobuf:"varint,1,req,name=conformant" json:"conformant,omitempty"`
	Delayed          *bool  `protobuf:"varint,2,opt,name=delayed,def=0" json:"delayed,omitempty"`
	Remaining        *int32 `protobuf:"varint,3,req,name=remaining" json:"remaining,omitempty"`
	Reset_           *int32 `protobuf:"varint,4,req,name=reset" json:"reset,omitempty"`
	Limit            *int32 `protobuf:"varint,5,req,name=limit" json:"limit,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TakeResponse) Reset()         { *m = TakeResponse{} }
func (m *TakeResponse) String() string { return proto.CompactTextString(m) }
func (*TakeResponse) ProtoMessage()    {}

const Default_TakeResponse_Delayed bool = false

func (m *TakeResponse) GetConformant() bool {
	if m != nil && m.Conformant != nil {
		return *m.Conformant
	}
	return false
}

func (m *TakeResponse) GetDelayed() bool {
	if m != nil && m.Delayed != nil {
		return *m.Delayed
	}
	return Default_TakeResponse_Delayed
}

func (m *TakeResponse) GetRemaining() int32 {
	if m != nil && m.Remaining != nil {
		return *m.Remaining
	}
	return 0
}

func (m *TakeResponse) GetReset_() int32 {
	if m != nil && m.Reset_ != nil {
		return *m.Reset_
	}
	return 0
}

func (m *TakeResponse) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

var E_TakeResponse_Response = &proto.ExtensionDesc{
	ExtendedType:  (*Response)(nil),
	ExtensionType: (*TakeResponse)(nil),
	Field:         101,
	Name:          "limitd.TakeResponse.response",
	Tag:           "bytes,101,opt,name=response",
}

type PutResponse struct {
	Remaining        *int32 `protobuf:"varint,1,req,name=remaining" json:"remaining,omitempty"`
	Reset_           *int32 `protobuf:"varint,2,req,name=reset" json:"reset,omitempty"`
	Limit            *int32 `protobuf:"varint,3,req,name=limit" json:"limit,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PutResponse) Reset()         { *m = PutResponse{} }
func (m *PutResponse) String() string { return proto.CompactTextString(m) }
func (*PutResponse) ProtoMessage()    {}

func (m *PutResponse) GetRemaining() int32 {
	if m != nil && m.Remaining != nil {
		return *m.Remaining
	}
	return 0
}

func (m *PutResponse) GetReset_() int32 {
	if m != nil && m.Reset_ != nil {
		return *m.Reset_
	}
	return 0
}

func (m *PutResponse) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

var E_PutResponse_Response = &proto.ExtensionDesc{
	ExtendedType:  (*Response)(nil),
	ExtensionType: (*PutResponse)(nil),
	Field:         102,
	Name:          "limitd.PutResponse.response",
	Tag:           "bytes,102,opt,name=response",
}

func init() {
	proto.RegisterEnum("limitd.Response_Type", Response_Type_name, Response_Type_value)
	proto.RegisterEnum("limitd.ErrorResponse_Type", ErrorResponse_Type_name, ErrorResponse_Type_value)
	proto.RegisterExtension(E_ErrorResponse_Response)
	proto.RegisterExtension(E_TakeResponse_Response)
	proto.RegisterExtension(E_PutResponse_Response)
}
